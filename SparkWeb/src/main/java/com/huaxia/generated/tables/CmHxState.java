/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Keys;
import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.CmHxStateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmHxState extends TableImpl<CmHxStateRecord> {

    private static final long serialVersionUID = 1132594177;

    /**
     * The reference instance of <code>test.cm_hx_state</code>
     */
    public static final CmHxState CM_HX_STATE = new CmHxState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmHxStateRecord> getRecordType() {
        return CmHxStateRecord.class;
    }

    /**
     * The column <code>test.cm_hx_state.id</code>.
     */
    public final TableField<CmHxStateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.cm_hx_state.state</code>.
     */
    public final TableField<CmHxStateRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CHAR.length(30), this, "");

    /**
     * Create a <code>test.cm_hx_state</code> table reference
     */
    public CmHxState() {
        this("cm_hx_state", null);
    }

    /**
     * Create an aliased <code>test.cm_hx_state</code> table reference
     */
    public CmHxState(String alias) {
        this(alias, CM_HX_STATE);
    }

    private CmHxState(String alias, Table<CmHxStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmHxState(String alias, Table<CmHxStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CmHxStateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CM_HX_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmHxStateRecord> getPrimaryKey() {
        return Keys.KEY_CM_HX_STATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmHxStateRecord>> getKeys() {
        return Arrays.<UniqueKey<CmHxStateRecord>>asList(Keys.KEY_CM_HX_STATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmHxState as(String alias) {
        return new CmHxState(alias, this);
    }

    /**
     * Rename this table
     */
    public CmHxState rename(String name) {
        return new CmHxState(name, null);
    }
}
