/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Keys;
import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.UserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

    private static final long serialVersionUID = 1231844767;

    /**
     * The reference instance of <code>test.user</code>
     */
    public static final User USER = new User();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>test.user.user_id</code>.
     */
    public final TableField<UserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.user.user_name</code>.
     */
    public final TableField<UserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.CHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>test.user.user_real_name</code>.
     */
    public final TableField<UserRecord, String> USER_REAL_NAME = createField("user_real_name", org.jooq.impl.SQLDataType.CHAR.length(50), this, "");

    /**
     * The column <code>test.user.user_pass</code>.
     */
    public final TableField<UserRecord, String> USER_PASS = createField("user_pass", org.jooq.impl.SQLDataType.CHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>test.user.user_tel</code>.
     */
    public final TableField<UserRecord, String> USER_TEL = createField("user_tel", org.jooq.impl.SQLDataType.CHAR.length(11).nullable(false), this, "");

    /**
     * The column <code>test.user.user_email</code>.
     */
    public final TableField<UserRecord, String> USER_EMAIL = createField("user_email", org.jooq.impl.SQLDataType.CHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>test.user.gender</code>.
     */
    public final TableField<UserRecord, Integer> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>test.user.user_status</code>.
     */
    public final TableField<UserRecord, Integer> USER_STATUS = createField("user_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.user.remark</code>.
     */
    public final TableField<UserRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CHAR.length(255), this, "");

    /**
     * The column <code>test.user.receive_alarm_msg</code>.
     */
    public final TableField<UserRecord, Integer> RECEIVE_ALARM_MSG = createField("receive_alarm_msg", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.user.last_login_time</code>.
     */
    public final TableField<UserRecord, Timestamp> LAST_LOGIN_TIME = createField("last_login_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>test.user.creater</code>.
     */
    public final TableField<UserRecord, String> CREATER = createField("creater", org.jooq.impl.SQLDataType.CHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>test.user.create_time</code>.
     */
    public final TableField<UserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>test.user.updater</code>.
     */
    public final TableField<UserRecord, String> UPDATER = createField("updater", org.jooq.impl.SQLDataType.CHAR.length(20), this, "");

    /**
     * The column <code>test.user.update_time</code>.
     */
    public final TableField<UserRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>test.user</code> table reference
     */
    public User() {
        this("user", null);
    }

    /**
     * Create an aliased <code>test.user</code> table reference
     */
    public User(String alias) {
        this(alias, USER);
    }

    private User(String alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private User(String alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public User as(String alias) {
        return new User(alias, this);
    }

    /**
     * Rename this table
     */
    public User rename(String name) {
        return new User(name, null);
    }
}
