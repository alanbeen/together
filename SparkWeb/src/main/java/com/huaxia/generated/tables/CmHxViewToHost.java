/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Keys;
import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.CmHxViewToHostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmHxViewToHost extends TableImpl<CmHxViewToHostRecord> {

    private static final long serialVersionUID = -1842499;

    /**
     * The reference instance of <code>test.cm_hx_view_to_host</code>
     */
    public static final CmHxViewToHost CM_HX_VIEW_TO_HOST = new CmHxViewToHost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmHxViewToHostRecord> getRecordType() {
        return CmHxViewToHostRecord.class;
    }

    /**
     * The column <code>test.cm_hx_view_to_host.view_id</code>.
     */
    public final TableField<CmHxViewToHostRecord, Integer> VIEW_ID = createField("view_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.cm_hx_view_to_host.host_id</code>.
     */
    public final TableField<CmHxViewToHostRecord, Integer> HOST_ID = createField("host_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>test.cm_hx_view_to_host</code> table reference
     */
    public CmHxViewToHost() {
        this("cm_hx_view_to_host", null);
    }

    /**
     * Create an aliased <code>test.cm_hx_view_to_host</code> table reference
     */
    public CmHxViewToHost(String alias) {
        this(alias, CM_HX_VIEW_TO_HOST);
    }

    private CmHxViewToHost(String alias, Table<CmHxViewToHostRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmHxViewToHost(String alias, Table<CmHxViewToHostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmHxViewToHostRecord> getPrimaryKey() {
        return Keys.KEY_CM_HX_VIEW_TO_HOST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmHxViewToHostRecord>> getKeys() {
        return Arrays.<UniqueKey<CmHxViewToHostRecord>>asList(Keys.KEY_CM_HX_VIEW_TO_HOST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmHxViewToHost as(String alias) {
        return new CmHxViewToHost(alias, this);
    }

    /**
     * Rename this table
     */
    public CmHxViewToHost rename(String name) {
        return new CmHxViewToHost(name, null);
    }
}
