/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Keys;
import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.UserGroupToUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupToUser extends TableImpl<UserGroupToUserRecord> {

    private static final long serialVersionUID = 713448064;

    /**
     * The reference instance of <code>test.user_group_to_user</code>
     */
    public static final UserGroupToUser USER_GROUP_TO_USER = new UserGroupToUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserGroupToUserRecord> getRecordType() {
        return UserGroupToUserRecord.class;
    }

    /**
     * The column <code>test.user_group_to_user.user_group_id</code>.
     */
    public final TableField<UserGroupToUserRecord, Integer> USER_GROUP_ID = createField("user_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.user_group_to_user.user_id</code>.
     */
    public final TableField<UserGroupToUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>test.user_group_to_user</code> table reference
     */
    public UserGroupToUser() {
        this("user_group_to_user", null);
    }

    /**
     * Create an aliased <code>test.user_group_to_user</code> table reference
     */
    public UserGroupToUser(String alias) {
        this(alias, USER_GROUP_TO_USER);
    }

    private UserGroupToUser(String alias, Table<UserGroupToUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserGroupToUser(String alias, Table<UserGroupToUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserGroupToUserRecord> getPrimaryKey() {
        return Keys.KEY_USER_GROUP_TO_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserGroupToUserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserGroupToUserRecord>>asList(Keys.KEY_USER_GROUP_TO_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserGroupToUser as(String alias) {
        return new UserGroupToUser(alias, this);
    }

    /**
     * Rename this table
     */
    public UserGroupToUser rename(String name) {
        return new UserGroupToUser(name, null);
    }
}
