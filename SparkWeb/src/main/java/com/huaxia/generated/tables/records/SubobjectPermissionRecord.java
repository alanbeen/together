/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables.records;


import com.huaxia.generated.tables.SubobjectPermission;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubobjectPermissionRecord extends UpdatableRecordImpl<SubobjectPermissionRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1587819967;

    /**
     * Setter for <code>test.subobject_permission.subobject_permission_id</code>.
     */
    public void setSubobjectPermissionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.subobject_permission.subobject_permission_id</code>.
     */
    public Integer getSubobjectPermissionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.subobject_permission.role_object_id</code>.
     */
    public void setRoleObjectId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.subobject_permission.role_object_id</code>.
     */
    public Integer getRoleObjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test.subobject_permission.subobject_id</code>.
     */
    public void setSubobjectId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.subobject_permission.subobject_id</code>.
     */
    public Integer getSubobjectId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>test.subobject_permission.permission_id</code>.
     */
    public void setPermissionId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.subobject_permission.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SubobjectPermission.SUBOBJECT_PERMISSION.SUBOBJECT_PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SubobjectPermission.SUBOBJECT_PERMISSION.ROLE_OBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return SubobjectPermission.SUBOBJECT_PERMISSION.SUBOBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return SubobjectPermission.SUBOBJECT_PERMISSION.PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSubobjectPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRoleObjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSubobjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubobjectPermissionRecord value1(Integer value) {
        setSubobjectPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubobjectPermissionRecord value2(Integer value) {
        setRoleObjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubobjectPermissionRecord value3(Integer value) {
        setSubobjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubobjectPermissionRecord value4(Integer value) {
        setPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubobjectPermissionRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubobjectPermissionRecord
     */
    public SubobjectPermissionRecord() {
        super(SubobjectPermission.SUBOBJECT_PERMISSION);
    }

    /**
     * Create a detached, initialised SubobjectPermissionRecord
     */
    public SubobjectPermissionRecord(Integer subobjectPermissionId, Integer roleObjectId, Integer subobjectId, Integer permissionId) {
        super(SubobjectPermission.SUBOBJECT_PERMISSION);

        set(0, subobjectPermissionId);
        set(1, roleObjectId);
        set(2, subobjectId);
        set(3, permissionId);
    }
}
