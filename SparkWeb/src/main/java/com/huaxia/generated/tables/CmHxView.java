/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Keys;
import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.CmHxViewRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmHxView extends TableImpl<CmHxViewRecord> {

    private static final long serialVersionUID = -232920752;

    /**
     * The reference instance of <code>test.cm_hx_view</code>
     */
    public static final CmHxView CM_HX_VIEW = new CmHxView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmHxViewRecord> getRecordType() {
        return CmHxViewRecord.class;
    }

    /**
     * The column <code>test.cm_hx_view.view_id</code>.
     */
    public final TableField<CmHxViewRecord, Integer> VIEW_ID = createField("view_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.cm_hx_view.view_name</code>.
     */
    public final TableField<CmHxViewRecord, String> VIEW_NAME = createField("view_name", org.jooq.impl.SQLDataType.CHAR.length(50).nullable(false), this, "");

    /**
     * Create a <code>test.cm_hx_view</code> table reference
     */
    public CmHxView() {
        this("cm_hx_view", null);
    }

    /**
     * Create an aliased <code>test.cm_hx_view</code> table reference
     */
    public CmHxView(String alias) {
        this(alias, CM_HX_VIEW);
    }

    private CmHxView(String alias, Table<CmHxViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmHxView(String alias, Table<CmHxViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CmHxViewRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CM_HX_VIEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmHxViewRecord> getPrimaryKey() {
        return Keys.KEY_CM_HX_VIEW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmHxViewRecord>> getKeys() {
        return Arrays.<UniqueKey<CmHxViewRecord>>asList(Keys.KEY_CM_HX_VIEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmHxView as(String alias) {
        return new CmHxView(alias, this);
    }

    /**
     * Rename this table
     */
    public CmHxView rename(String name) {
        return new CmHxView(name, null);
    }
}
