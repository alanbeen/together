/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated;


import com.huaxia.generated.tables.CmHxEqu;
import com.huaxia.generated.tables.CmHxEquInfo;
import com.huaxia.generated.tables.CmHxIp;
import com.huaxia.generated.tables.CmHxObject;
import com.huaxia.generated.tables.CmHxObjectRole;
import com.huaxia.generated.tables.CmHxOs;
import com.huaxia.generated.tables.CmHxPermission;
import com.huaxia.generated.tables.CmHxPort;
import com.huaxia.generated.tables.CmHxPortLogic;
import com.huaxia.generated.tables.CmHxRole;
import com.huaxia.generated.tables.CmHxRoleUser;
import com.huaxia.generated.tables.CmHxState;
import com.huaxia.generated.tables.CmHxSubobjectPermission;
import com.huaxia.generated.tables.CmHxUser;
import com.huaxia.generated.tables.CmHxUsergroup;
import com.huaxia.generated.tables.CmHxUsergroupToUser;
import com.huaxia.generated.tables.CmHxView;
import com.huaxia.generated.tables.CmHxViewToHost;
import com.huaxia.generated.tables.Host;
import com.huaxia.generated.tables.Object;
import com.huaxia.generated.tables.ObjectRole;
import com.huaxia.generated.tables.Role;
import com.huaxia.generated.tables.SubobjectPermission;
import com.huaxia.generated.tables.User;
import com.huaxia.generated.tables.UserGroup;
import com.huaxia.generated.tables.UserGroupToUser;
import com.huaxia.generated.tables.View;
import com.huaxia.generated.tables.ViewToHost;
import com.huaxia.generated.tables.records.CmHxEquInfoRecord;
import com.huaxia.generated.tables.records.CmHxEquRecord;
import com.huaxia.generated.tables.records.CmHxIpRecord;
import com.huaxia.generated.tables.records.CmHxObjectRecord;
import com.huaxia.generated.tables.records.CmHxObjectRoleRecord;
import com.huaxia.generated.tables.records.CmHxOsRecord;
import com.huaxia.generated.tables.records.CmHxPermissionRecord;
import com.huaxia.generated.tables.records.CmHxPortLogicRecord;
import com.huaxia.generated.tables.records.CmHxPortRecord;
import com.huaxia.generated.tables.records.CmHxRoleRecord;
import com.huaxia.generated.tables.records.CmHxRoleUserRecord;
import com.huaxia.generated.tables.records.CmHxStateRecord;
import com.huaxia.generated.tables.records.CmHxSubobjectPermissionRecord;
import com.huaxia.generated.tables.records.CmHxUserRecord;
import com.huaxia.generated.tables.records.CmHxUsergroupRecord;
import com.huaxia.generated.tables.records.CmHxUsergroupToUserRecord;
import com.huaxia.generated.tables.records.CmHxViewRecord;
import com.huaxia.generated.tables.records.CmHxViewToHostRecord;
import com.huaxia.generated.tables.records.HostRecord;
import com.huaxia.generated.tables.records.ObjectRecord;
import com.huaxia.generated.tables.records.ObjectRoleRecord;
import com.huaxia.generated.tables.records.RoleRecord;
import com.huaxia.generated.tables.records.SubobjectPermissionRecord;
import com.huaxia.generated.tables.records.UserGroupRecord;
import com.huaxia.generated.tables.records.UserGroupToUserRecord;
import com.huaxia.generated.tables.records.UserRecord;
import com.huaxia.generated.tables.records.ViewRecord;
import com.huaxia.generated.tables.records.ViewToHostRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>test</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CmHxEquRecord, Long> IDENTITY_CM_HX_EQU = Identities0.IDENTITY_CM_HX_EQU;
    public static final Identity<CmHxObjectRecord, Integer> IDENTITY_CM_HX_OBJECT = Identities0.IDENTITY_CM_HX_OBJECT;
    public static final Identity<CmHxObjectRoleRecord, Integer> IDENTITY_CM_HX_OBJECT_ROLE = Identities0.IDENTITY_CM_HX_OBJECT_ROLE;
    public static final Identity<CmHxOsRecord, Integer> IDENTITY_CM_HX_OS = Identities0.IDENTITY_CM_HX_OS;
    public static final Identity<CmHxPermissionRecord, Integer> IDENTITY_CM_HX_PERMISSION = Identities0.IDENTITY_CM_HX_PERMISSION;
    public static final Identity<CmHxPortRecord, Integer> IDENTITY_CM_HX_PORT = Identities0.IDENTITY_CM_HX_PORT;
    public static final Identity<CmHxRoleRecord, Integer> IDENTITY_CM_HX_ROLE = Identities0.IDENTITY_CM_HX_ROLE;
    public static final Identity<CmHxStateRecord, Integer> IDENTITY_CM_HX_STATE = Identities0.IDENTITY_CM_HX_STATE;
    public static final Identity<CmHxSubobjectPermissionRecord, Integer> IDENTITY_CM_HX_SUBOBJECT_PERMISSION = Identities0.IDENTITY_CM_HX_SUBOBJECT_PERMISSION;
    public static final Identity<CmHxUserRecord, Integer> IDENTITY_CM_HX_USER = Identities0.IDENTITY_CM_HX_USER;
    public static final Identity<CmHxUsergroupRecord, Integer> IDENTITY_CM_HX_USERGROUP = Identities0.IDENTITY_CM_HX_USERGROUP;
    public static final Identity<CmHxViewRecord, Integer> IDENTITY_CM_HX_VIEW = Identities0.IDENTITY_CM_HX_VIEW;
    public static final Identity<HostRecord, Integer> IDENTITY_HOST = Identities0.IDENTITY_HOST;
    public static final Identity<ObjectRecord, Integer> IDENTITY_OBJECT = Identities0.IDENTITY_OBJECT;
    public static final Identity<ObjectRoleRecord, Integer> IDENTITY_OBJECT_ROLE = Identities0.IDENTITY_OBJECT_ROLE;
    public static final Identity<RoleRecord, Integer> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<SubobjectPermissionRecord, Integer> IDENTITY_SUBOBJECT_PERMISSION = Identities0.IDENTITY_SUBOBJECT_PERMISSION;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<UserGroupRecord, Integer> IDENTITY_USER_GROUP = Identities0.IDENTITY_USER_GROUP;
    public static final Identity<ViewRecord, Integer> IDENTITY_VIEW = Identities0.IDENTITY_VIEW;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CmHxEquRecord> KEY_CM_HX_EQU_PRIMARY = UniqueKeys0.KEY_CM_HX_EQU_PRIMARY;
    public static final UniqueKey<CmHxEquInfoRecord> KEY_CM_HX_EQU_INFO_PRIMARY = UniqueKeys0.KEY_CM_HX_EQU_INFO_PRIMARY;
    public static final UniqueKey<CmHxIpRecord> KEY_CM_HX_IP_PRIMARY = UniqueKeys0.KEY_CM_HX_IP_PRIMARY;
    public static final UniqueKey<CmHxObjectRecord> KEY_CM_HX_OBJECT_PRIMARY = UniqueKeys0.KEY_CM_HX_OBJECT_PRIMARY;
    public static final UniqueKey<CmHxObjectRoleRecord> KEY_CM_HX_OBJECT_ROLE_PRIMARY = UniqueKeys0.KEY_CM_HX_OBJECT_ROLE_PRIMARY;
    public static final UniqueKey<CmHxOsRecord> KEY_CM_HX_OS_PRIMARY = UniqueKeys0.KEY_CM_HX_OS_PRIMARY;
    public static final UniqueKey<CmHxPermissionRecord> KEY_CM_HX_PERMISSION_PRIMARY = UniqueKeys0.KEY_CM_HX_PERMISSION_PRIMARY;
    public static final UniqueKey<CmHxPortRecord> KEY_CM_HX_PORT_PRIMARY = UniqueKeys0.KEY_CM_HX_PORT_PRIMARY;
    public static final UniqueKey<CmHxPortLogicRecord> KEY_CM_HX_PORT_LOGIC_PRIMARY = UniqueKeys0.KEY_CM_HX_PORT_LOGIC_PRIMARY;
    public static final UniqueKey<CmHxRoleRecord> KEY_CM_HX_ROLE_PRIMARY = UniqueKeys0.KEY_CM_HX_ROLE_PRIMARY;
    public static final UniqueKey<CmHxRoleUserRecord> KEY_CM_HX_ROLE_USER_PRIMARY = UniqueKeys0.KEY_CM_HX_ROLE_USER_PRIMARY;
    public static final UniqueKey<CmHxStateRecord> KEY_CM_HX_STATE_PRIMARY = UniqueKeys0.KEY_CM_HX_STATE_PRIMARY;
    public static final UniqueKey<CmHxSubobjectPermissionRecord> KEY_CM_HX_SUBOBJECT_PERMISSION_PRIMARY = UniqueKeys0.KEY_CM_HX_SUBOBJECT_PERMISSION_PRIMARY;
    public static final UniqueKey<CmHxUserRecord> KEY_CM_HX_USER_PRIMARY = UniqueKeys0.KEY_CM_HX_USER_PRIMARY;
    public static final UniqueKey<CmHxUsergroupRecord> KEY_CM_HX_USERGROUP_PRIMARY = UniqueKeys0.KEY_CM_HX_USERGROUP_PRIMARY;
    public static final UniqueKey<CmHxUsergroupToUserRecord> KEY_CM_HX_USERGROUP_TO_USER_PRIMARY = UniqueKeys0.KEY_CM_HX_USERGROUP_TO_USER_PRIMARY;
    public static final UniqueKey<CmHxViewRecord> KEY_CM_HX_VIEW_PRIMARY = UniqueKeys0.KEY_CM_HX_VIEW_PRIMARY;
    public static final UniqueKey<CmHxViewToHostRecord> KEY_CM_HX_VIEW_TO_HOST_PRIMARY = UniqueKeys0.KEY_CM_HX_VIEW_TO_HOST_PRIMARY;
    public static final UniqueKey<HostRecord> KEY_HOST_PRIMARY = UniqueKeys0.KEY_HOST_PRIMARY;
    public static final UniqueKey<ObjectRecord> KEY_OBJECT_PRIMARY = UniqueKeys0.KEY_OBJECT_PRIMARY;
    public static final UniqueKey<ObjectRoleRecord> KEY_OBJECT_ROLE_PRIMARY = UniqueKeys0.KEY_OBJECT_ROLE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<SubobjectPermissionRecord> KEY_SUBOBJECT_PERMISSION_PRIMARY = UniqueKeys0.KEY_SUBOBJECT_PERMISSION_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserGroupRecord> KEY_USER_GROUP_PRIMARY = UniqueKeys0.KEY_USER_GROUP_PRIMARY;
    public static final UniqueKey<UserGroupToUserRecord> KEY_USER_GROUP_TO_USER_PRIMARY = UniqueKeys0.KEY_USER_GROUP_TO_USER_PRIMARY;
    public static final UniqueKey<ViewRecord> KEY_VIEW_PRIMARY = UniqueKeys0.KEY_VIEW_PRIMARY;
    public static final UniqueKey<ViewToHostRecord> KEY_VIEW_TO_HOST_PRIMARY = UniqueKeys0.KEY_VIEW_TO_HOST_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CmHxEquRecord, Long> IDENTITY_CM_HX_EQU = createIdentity(CmHxEqu.CM_HX_EQU, CmHxEqu.CM_HX_EQU.EQU_ID);
        public static Identity<CmHxObjectRecord, Integer> IDENTITY_CM_HX_OBJECT = createIdentity(CmHxObject.CM_HX_OBJECT, CmHxObject.CM_HX_OBJECT.OBJECT_ID);
        public static Identity<CmHxObjectRoleRecord, Integer> IDENTITY_CM_HX_OBJECT_ROLE = createIdentity(CmHxObjectRole.CM_HX_OBJECT_ROLE, CmHxObjectRole.CM_HX_OBJECT_ROLE.ROLE_OBJECT_ID);
        public static Identity<CmHxOsRecord, Integer> IDENTITY_CM_HX_OS = createIdentity(CmHxOs.CM_HX_OS, CmHxOs.CM_HX_OS.OS_ID);
        public static Identity<CmHxPermissionRecord, Integer> IDENTITY_CM_HX_PERMISSION = createIdentity(CmHxPermission.CM_HX_PERMISSION, CmHxPermission.CM_HX_PERMISSION.PERMISSION_ID);
        public static Identity<CmHxPortRecord, Integer> IDENTITY_CM_HX_PORT = createIdentity(CmHxPort.CM_HX_PORT, CmHxPort.CM_HX_PORT.PORT_ID);
        public static Identity<CmHxRoleRecord, Integer> IDENTITY_CM_HX_ROLE = createIdentity(CmHxRole.CM_HX_ROLE, CmHxRole.CM_HX_ROLE.ROLE_ID);
        public static Identity<CmHxStateRecord, Integer> IDENTITY_CM_HX_STATE = createIdentity(CmHxState.CM_HX_STATE, CmHxState.CM_HX_STATE.ID);
        public static Identity<CmHxSubobjectPermissionRecord, Integer> IDENTITY_CM_HX_SUBOBJECT_PERMISSION = createIdentity(CmHxSubobjectPermission.CM_HX_SUBOBJECT_PERMISSION, CmHxSubobjectPermission.CM_HX_SUBOBJECT_PERMISSION.SUBOBJECT_PERMISSION_ID);
        public static Identity<CmHxUserRecord, Integer> IDENTITY_CM_HX_USER = createIdentity(CmHxUser.CM_HX_USER, CmHxUser.CM_HX_USER.USER_ID);
        public static Identity<CmHxUsergroupRecord, Integer> IDENTITY_CM_HX_USERGROUP = createIdentity(CmHxUsergroup.CM_HX_USERGROUP, CmHxUsergroup.CM_HX_USERGROUP.USER_GROUP_ID);
        public static Identity<CmHxViewRecord, Integer> IDENTITY_CM_HX_VIEW = createIdentity(CmHxView.CM_HX_VIEW, CmHxView.CM_HX_VIEW.VIEW_ID);
        public static Identity<HostRecord, Integer> IDENTITY_HOST = createIdentity(Host.HOST, Host.HOST.HOST_ID);
        public static Identity<ObjectRecord, Integer> IDENTITY_OBJECT = createIdentity(Object.OBJECT, Object.OBJECT.OBJECT_ID);
        public static Identity<ObjectRoleRecord, Integer> IDENTITY_OBJECT_ROLE = createIdentity(ObjectRole.OBJECT_ROLE, ObjectRole.OBJECT_ROLE.ROLE_OBJECT_ID);
        public static Identity<RoleRecord, Integer> IDENTITY_ROLE = createIdentity(Role.ROLE, Role.ROLE.ROLE_ID);
        public static Identity<SubobjectPermissionRecord, Integer> IDENTITY_SUBOBJECT_PERMISSION = createIdentity(SubobjectPermission.SUBOBJECT_PERMISSION, SubobjectPermission.SUBOBJECT_PERMISSION.SUBOBJECT_PERMISSION_ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.USER_ID);
        public static Identity<UserGroupRecord, Integer> IDENTITY_USER_GROUP = createIdentity(UserGroup.USER_GROUP, UserGroup.USER_GROUP.USER_GROUP_ID);
        public static Identity<ViewRecord, Integer> IDENTITY_VIEW = createIdentity(View.VIEW, View.VIEW.VIEW_ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CmHxEquRecord> KEY_CM_HX_EQU_PRIMARY = createUniqueKey(CmHxEqu.CM_HX_EQU, "KEY_cm_hx_equ_PRIMARY", CmHxEqu.CM_HX_EQU.EQU_ID);
        public static final UniqueKey<CmHxEquInfoRecord> KEY_CM_HX_EQU_INFO_PRIMARY = createUniqueKey(CmHxEquInfo.CM_HX_EQU_INFO, "KEY_cm_hx_equ_info_PRIMARY", CmHxEquInfo.CM_HX_EQU_INFO.EQU_ID);
        public static final UniqueKey<CmHxIpRecord> KEY_CM_HX_IP_PRIMARY = createUniqueKey(CmHxIp.CM_HX_IP, "KEY_cm_hx_ip_PRIMARY", CmHxIp.CM_HX_IP.ID);
        public static final UniqueKey<CmHxObjectRecord> KEY_CM_HX_OBJECT_PRIMARY = createUniqueKey(CmHxObject.CM_HX_OBJECT, "KEY_cm_hx_object_PRIMARY", CmHxObject.CM_HX_OBJECT.OBJECT_ID);
        public static final UniqueKey<CmHxObjectRoleRecord> KEY_CM_HX_OBJECT_ROLE_PRIMARY = createUniqueKey(CmHxObjectRole.CM_HX_OBJECT_ROLE, "KEY_cm_hx_object_role_PRIMARY", CmHxObjectRole.CM_HX_OBJECT_ROLE.ROLE_OBJECT_ID);
        public static final UniqueKey<CmHxOsRecord> KEY_CM_HX_OS_PRIMARY = createUniqueKey(CmHxOs.CM_HX_OS, "KEY_cm_hx_os_PRIMARY", CmHxOs.CM_HX_OS.OS_ID);
        public static final UniqueKey<CmHxPermissionRecord> KEY_CM_HX_PERMISSION_PRIMARY = createUniqueKey(CmHxPermission.CM_HX_PERMISSION, "KEY_cm_hx_permission_PRIMARY", CmHxPermission.CM_HX_PERMISSION.PERMISSION_ID);
        public static final UniqueKey<CmHxPortRecord> KEY_CM_HX_PORT_PRIMARY = createUniqueKey(CmHxPort.CM_HX_PORT, "KEY_cm_hx_port_PRIMARY", CmHxPort.CM_HX_PORT.PORT_ID);
        public static final UniqueKey<CmHxPortLogicRecord> KEY_CM_HX_PORT_LOGIC_PRIMARY = createUniqueKey(CmHxPortLogic.CM_HX_PORT_LOGIC, "KEY_cm_hx_port_logic_PRIMARY", CmHxPortLogic.CM_HX_PORT_LOGIC.ID);
        public static final UniqueKey<CmHxRoleRecord> KEY_CM_HX_ROLE_PRIMARY = createUniqueKey(CmHxRole.CM_HX_ROLE, "KEY_cm_hx_role_PRIMARY", CmHxRole.CM_HX_ROLE.ROLE_ID);
        public static final UniqueKey<CmHxRoleUserRecord> KEY_CM_HX_ROLE_USER_PRIMARY = createUniqueKey(CmHxRoleUser.CM_HX_ROLE_USER, "KEY_cm_hx_role_user_PRIMARY", CmHxRoleUser.CM_HX_ROLE_USER.ROLE_ID, CmHxRoleUser.CM_HX_ROLE_USER.USER_ID);
        public static final UniqueKey<CmHxStateRecord> KEY_CM_HX_STATE_PRIMARY = createUniqueKey(CmHxState.CM_HX_STATE, "KEY_cm_hx_state_PRIMARY", CmHxState.CM_HX_STATE.ID);
        public static final UniqueKey<CmHxSubobjectPermissionRecord> KEY_CM_HX_SUBOBJECT_PERMISSION_PRIMARY = createUniqueKey(CmHxSubobjectPermission.CM_HX_SUBOBJECT_PERMISSION, "KEY_cm_hx_subobject_permission_PRIMARY", CmHxSubobjectPermission.CM_HX_SUBOBJECT_PERMISSION.SUBOBJECT_PERMISSION_ID);
        public static final UniqueKey<CmHxUserRecord> KEY_CM_HX_USER_PRIMARY = createUniqueKey(CmHxUser.CM_HX_USER, "KEY_cm_hx_user_PRIMARY", CmHxUser.CM_HX_USER.USER_ID);
        public static final UniqueKey<CmHxUsergroupRecord> KEY_CM_HX_USERGROUP_PRIMARY = createUniqueKey(CmHxUsergroup.CM_HX_USERGROUP, "KEY_cm_hx_usergroup_PRIMARY", CmHxUsergroup.CM_HX_USERGROUP.USER_GROUP_ID);
        public static final UniqueKey<CmHxUsergroupToUserRecord> KEY_CM_HX_USERGROUP_TO_USER_PRIMARY = createUniqueKey(CmHxUsergroupToUser.CM_HX_USERGROUP_TO_USER, "KEY_cm_hx_usergroup_to_user_PRIMARY", CmHxUsergroupToUser.CM_HX_USERGROUP_TO_USER.USER_GROUP_ID, CmHxUsergroupToUser.CM_HX_USERGROUP_TO_USER.USER_ID);
        public static final UniqueKey<CmHxViewRecord> KEY_CM_HX_VIEW_PRIMARY = createUniqueKey(CmHxView.CM_HX_VIEW, "KEY_cm_hx_view_PRIMARY", CmHxView.CM_HX_VIEW.VIEW_ID);
        public static final UniqueKey<CmHxViewToHostRecord> KEY_CM_HX_VIEW_TO_HOST_PRIMARY = createUniqueKey(CmHxViewToHost.CM_HX_VIEW_TO_HOST, "KEY_cm_hx_view_to_host_PRIMARY", CmHxViewToHost.CM_HX_VIEW_TO_HOST.VIEW_ID, CmHxViewToHost.CM_HX_VIEW_TO_HOST.HOST_ID);
        public static final UniqueKey<HostRecord> KEY_HOST_PRIMARY = createUniqueKey(Host.HOST, "KEY_host_PRIMARY", Host.HOST.HOST_ID);
        public static final UniqueKey<ObjectRecord> KEY_OBJECT_PRIMARY = createUniqueKey(Object.OBJECT, "KEY_object_PRIMARY", Object.OBJECT.OBJECT_ID);
        public static final UniqueKey<ObjectRoleRecord> KEY_OBJECT_ROLE_PRIMARY = createUniqueKey(ObjectRole.OBJECT_ROLE, "KEY_object_role_PRIMARY", ObjectRole.OBJECT_ROLE.ROLE_OBJECT_ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ROLE_ID);
        public static final UniqueKey<SubobjectPermissionRecord> KEY_SUBOBJECT_PERMISSION_PRIMARY = createUniqueKey(SubobjectPermission.SUBOBJECT_PERMISSION, "KEY_subobject_permission_PRIMARY", SubobjectPermission.SUBOBJECT_PERMISSION.SUBOBJECT_PERMISSION_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.USER_ID);
        public static final UniqueKey<UserGroupRecord> KEY_USER_GROUP_PRIMARY = createUniqueKey(UserGroup.USER_GROUP, "KEY_user_group_PRIMARY", UserGroup.USER_GROUP.USER_GROUP_ID);
        public static final UniqueKey<UserGroupToUserRecord> KEY_USER_GROUP_TO_USER_PRIMARY = createUniqueKey(UserGroupToUser.USER_GROUP_TO_USER, "KEY_user_group_to_user_PRIMARY", UserGroupToUser.USER_GROUP_TO_USER.USER_GROUP_ID, UserGroupToUser.USER_GROUP_TO_USER.USER_ID);
        public static final UniqueKey<ViewRecord> KEY_VIEW_PRIMARY = createUniqueKey(View.VIEW, "KEY_view_PRIMARY", View.VIEW.VIEW_ID);
        public static final UniqueKey<ViewToHostRecord> KEY_VIEW_TO_HOST_PRIMARY = createUniqueKey(ViewToHost.VIEW_TO_HOST, "KEY_view_to_host_PRIMARY", ViewToHost.VIEW_TO_HOST.VIEW_ID, ViewToHost.VIEW_TO_HOST.HOST_ID);
    }
}
